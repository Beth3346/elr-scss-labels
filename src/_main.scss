@import 'node_modules/elr-scss-functions/main';
// Labels

@mixin elr-label($config: ()) {
  $config: extend(
    (
      border-radius: 5px,
      color: $main-color,
      text-color: $white,
      border-color: none
    ),
    $config
  );

  $border-radius: map-get($config, border-radius);
  $color: map-get($config, color);
  $text-color: map-get($config, text-color);
  $border-color: map-get($config, border-color);

  font-size: to-rems(12px);
  padding: to-rems(5px) to-rems(15px);
  display: inline-block;
  font-weight: $extra-bold;
  color: $text-color;
  border-width: 1px;
  border-style: solid;
  background-color: $color;

  @if $border-radius != 0 {
    border-radius: $border-radius;
  }

  @if $border-color != none {
    border-color: $border-color;
  } @else {
    border-color: $color;
  }

  span {
    margin-right: to-rems(5px);

    &:first-child {
      margin-right: to-rems(10px);
    }

    &:only-child,
    &:last-child {
      margin-right: 0;
    }
  }

  .label-close {
    cursor: pointer;
  }
}

// TODO: map over types to avoid crazy if/else statements
@mixin elr-label-context($config: ()) {
  $config: extend(
    (
      type: 'info'
    ),
    $config
  );

  $type: map-get($config, type);

  @if $type == 'info' {
    background-color: $info-color;
    border-color: $info-color;
  } @else if $type == 'danger' {
    background-color: $danger-color;
    border-color: $danger-color;
  } @else if $type == 'warning' {
    background-color: $warning-color;
    border-color: $warning-color;
  } @else if $type == 'success' {
    background-color: $success-color;
    border-color: $success-color;
  } @else if $type == 'muted' {
    background-color: $muted-color;
    border-color: $muted-color;
  }
}

@mixin elr-label-corner($config: ()) {
  $config: extend(
    (
      position-y: top,
      position-x: left,
      bg-color: $main-color,
      color: $white
    ),
    $config
  );

  $position-y: map-get($config, position-y);
  $position-x: map-get($config, position-x);
  $bg-color: map-get($config, bg-color);
  $color: map-get($config, color);

  position: absolute;
  #{$position-y}: 0;
  #{$position-x}: 0;
  padding: 0;
  margin: 0;

  .label-triangle {
    @include elr-triangle(
      $config: (
        direction: '#{$position-y}-#{$position-x}',
        base: 60px,
        height: 'auto',
        color: $bg-color
      )
    );
    text-align: center;
  }

  .label-icon {
    font-size: to-rems(14px);
    position: absolute;
    color: $color;
    #{$position-x}: to-rems(10px);
    #{$position-y}: to-rems(10px);
  }
}

@mixin elr-label-ribbon($config: ()) {
  $config: extend(
    (
      bg-color: $main-color,
      color: $white
    ),
    $config
  );

  $bg-color: map-get($config, bg-color);
  $color: map-get($config, color);

  color: $color;
  background-color: $bg-color;
  text-align: right;
  font-weight: $extra-bold;
  position: absolute;
  top: to-rems(20px);
  padding-left: to-rems(20px);
  left: -14px;
  line-height: 1;
  border-radius: 0 to-rems(3px) to-rems(3px) 0;

  &::before {
    @include elr-triangle(
      $config: (
        direction: 'top-right',
        base: 15px,
        height: 'auto',
        color: darken($bg-color, 10%)
      )
    );
    content: '';
    bottom: -14px;
    left: 0;
    position: absolute;
    display: block;
  }

  .label-title {
    padding: to-rems(10px) to-rems(20px) to-rems(10px) 0;
    color: $white;
    display: inline-block;
    font-size: to-rems(12px);
  }
}
